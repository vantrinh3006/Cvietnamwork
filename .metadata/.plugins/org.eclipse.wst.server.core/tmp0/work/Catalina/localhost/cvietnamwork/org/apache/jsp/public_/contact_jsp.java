/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.48
 * Generated at: 2021-09-11 10:06:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.public_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.bean.User;

public final class contact_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/templates/public/inc/footer.jsp", Long.valueOf(1629304332248L));
    _jspx_dependants.put("/templates/public/inc/header.jsp", Long.valueOf(1631354417976L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.bean.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<title>VIETNAMWORK</title>\r\n");
      out.write("		<meta charset=\"UTF-8\"/>\r\n");
      out.write("		<link href=\"");
      out.print(request.getContextPath());
      out.write("/templates/public/assets/css/style/style.css\" rel=\"stylesheet\" />\r\n");
      out.write("		<link href=\"");
      out.print(request.getContextPath());
      out.write("/templates/public/assets/css/reset/reset.css\" rel=\"stylesheet\" />\r\n");
      out.write("		<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("		\r\n");
      out.write("		<script type=\"text/javascript\" src=\"");
      out.print(request.getContextPath());
      out.write("/templates/public/assets/js/jquery.validate.min.js\" >	</script>\r\n");
      out.write("		\r\n");
      out.write("		<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("		\r\n");
      out.write("	</head>\r\n");
      out.write("	<style type=\"text/css\">	 \r\n");
      out.write("    	#form .addContact .error {color: red}\r\n");
      out.write("    	#form #form .addContact label  {\r\n");
      out.write("    		width: auto;\r\n");
      out.write("    		display: block;\r\n");
      out.write("    		float: none;\r\n");
      out.write("    	}\r\n");
      out.write("</style>\r\n");
      out.write("	<body>\r\n");
      out.write("		<div class=\"wrapper\">\r\n");
      out.write("			<div class=\"header\">\r\n");
      out.write("				<div>\r\n");
      out.write("				");

					String headerActive = request.getParameter("headerActive");
				
      out.write("<span class=\"logo\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/index?headerActive=1&page=1\">VIETNAMWORK</a></span>\r\n");
      out.write("<span class=\"index");
if("1".equals(headerActive)) out.print("-active");
      out.write("\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/index?headerActive=1&page=1\">Trang chủ</a></span>\r\n");
      out.write("\r\n");
      out.write("					<span class=\"contact");
if("2".equals(headerActive)) out.print("-active");
      out.write("\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/contact?headerActive=2\">Liên hệ</a></span>\r\n");
      out.write("\r\n");

	            	User userLogin = (User) session.getAttribute("userLogin");
	            	if(userLogin != null){
         	    
      out.write("<span class=\"login\">");
      out.print(userLogin.getFullname() );
      out.write("<span class=\"more\">	\r\n");
      out.write("									<a href=\"");
      out.print(request.getContextPath());
      out.write("/public/user/info\"><i class=\"fa fa-user\"></i> Thông tin tài khoản</a>\r\n");
      out.write("									<a href=\"");
      out.print(request.getContextPath());
      out.write("/public/user/voted?user_id=");
      out.print(userLogin.getId());
      out.write("&active=0\"><i class=\"fa fa-thumbs-up\"></i> Tin đã Like</a>\r\n");
      out.write("									<a href=\"");
      out.print(request.getContextPath());
      out.write("/public/user/commented?user_id=");
      out.print(userLogin.getId());
      out.write("&active=0\"><i class=\"fa fa-commenting\"></i> Tin đã bình luận</a>\r\n");
      out.write("									<a href=\"");
      out.print(request.getContextPath());
      out.write("/logout?display=public\"><i class=\"fa fa-sign-out\"></i> Đăng xuất</a>\r\n");
      out.write("							</span>\r\n");
      out.write("						</span>	\r\n");
      out.write("				");
}else{ 
      out.write("<span class=\"login\"><span>Khách</span><a href=\"");
      out.print(request.getContextPath());
      out.write("/login?display=public\">Đăng nhập</a></span>\r\n");
      out.write("				");
} 
      out.write("</div>	\r\n");
      out.write("				<div class=\"image\">\r\n");
      out.write("					<img id=\"img\" onclick=\"changeImage()\" src=\"");
      out.print(request.getContextPath() );
      out.write("/templates/public/images/slide0.jpg\" alt=\"slide\" />\r\n");
      out.write("				</div>\r\n");
      out.write("				<script>\r\n");
      out.write("					var index = 1;\r\n");
      out.write("					changeImage = function(){\r\n");
      out.write("					var imgs = [\"");
      out.print(request.getContextPath() );
      out.write("/templates/public/images/slide0.jpg\",\"");
      out.print(request.getContextPath() );
      out.write("/templates/public/images/slide1.jpg\",\"");
      out.print(request.getContextPath() );
      out.write("/templates/public/images/slide2.jpg\" ];\r\n");
      out.write("					document.getElementById('img').src = imgs[index];\r\n");
      out.write("					index ++;\r\n");
      out.write("					if(index == 3){index = 0;}\r\n");
      out.write("					}\r\n");
      out.write("					setInterval(changeImage,1500);		//1000: đơn vị mili giây\r\n");
      out.write("				</script>				\r\n");
      out.write("			</div>\r\n");
      out.write("			");
      out.write("<div class=\"left-bar\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"body\">\r\n");
      out.write("				<div class=\"title\">Gửi liên hệ đến chúng tôi</div>\r\n");
      out.write("				");
	String err = request.getParameter("err");
					String msg = request.getParameter("msg");
					
					if("1".equals(err)){
        				out.print("<span style=\"background: yellow; color: red; font-weight: bold; padding: 5px; \">Thêm liên hệ thất bại</span>");
        			}
					if("1".equals(msg)){
        				out.print("<span style=\"background: yellow; color: green; font-weight: bold; padding: 5px; \">Thêm liên hệ thành công </span>");
        			}
					
        		
      out.write("<div class=\"addForm\">\r\n");
      out.write("					<form action=\"\" method=\"post\"  id=\"form\" >\r\n");
      out.write("						<div class=\"addContact\">\r\n");
      out.write("							<label for=\"contactfullname\">Fullname</label>	<br >\r\n");
      out.write("							<input type=\"text\" id=\"contactfullname\" value=\"\" name=\"contactfullname\" required=\"required\"/>	\r\n");
      out.write("						</div>	\r\n");
      out.write("						<div class=\"addContact\">\r\n");
      out.write("							<label for=\"contactemail\">Email</label>  <br >\r\n");
      out.write("							<input type=\"text\" id=\"contactemail\" value=\"\" name=\"contactemail\" required=\"required\"/>	\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"addContact\">\r\n");
      out.write("							<label for=\"contactmessage\">Message</label>	<br >\r\n");
      out.write("							<textarea type=\"text\" id=\"contactmessage\" value=\"\" name=\"contactmessage\" required=\"required\"></textarea>	\r\n");
      out.write("<!-- 							<input type=\"text\" id=\"contactmessage\" value=\"\" name=\"contactmessage\" required=\"required\"/> 	 -->\r\n");
      out.write("						</div>	\r\n");
      out.write("						<button type=\"submit\" name=\"submit\" >Gửi</button>\r\n");
      out.write("					</form>\r\n");
      out.write("					\r\n");
      out.write("					<script type=\"text/javascript\">	// validate form when submited\r\n");
      out.write("						$().ready(function(){\r\n");
      out.write("							var validator = $(\"#form\").validate({	// form có id là form\r\n");
      out.write("								errorPlacement: function(error, element){	// đoạn này có chức năng hiển thị ra lỗi\r\n");
      out.write("									$(element).closest(\"form\").find(\"label[for='\" + element.attr(\"id\") + \"']\").append(error);\r\n");
      out.write("								},\r\n");
      out.write("								errorElement: \"span\",\r\n");
      out.write("								rules:{\r\n");
      out.write("									\"contactfullname\":{\r\n");
      out.write("										required: true,	\r\n");
      out.write("										minlength: 5,\r\n");
      out.write("									},\r\n");
      out.write("									\"contactemail\":{\r\n");
      out.write("										required: true,\r\n");
      out.write("									},\r\n");
      out.write("									\"contactmessage\":{\r\n");
      out.write("										required: true,\r\n");
      out.write("									},\r\n");
      out.write("								messages: {\r\n");
      out.write("									contactfullname:{\r\n");
      out.write("										required: \" (Hãy nhập tên !)\",\r\n");
      out.write("									},\r\n");
      out.write("									contactemail:{\r\n");
      out.write("										required: \" (Hãy nhập Emai !)\",\r\n");
      out.write("									},\r\n");
      out.write("									contactmessage:{\r\n");
      out.write("										required: \" (Hãy nhập lời nhắn !)\",\r\n");
      out.write("									},\r\n");
      out.write("								}\r\n");
      out.write("								\r\n");
      out.write("\r\n");
      out.write("								},\r\n");
      out.write("							});	\r\n");
      out.write("						});\r\n");
      out.write("					\r\n");
      out.write("// 					$(document).ready(function (){ // tất cả các document mà chúng ta chèn vào trang web đã ready rồi\r\n");
      out.write("// 						//thì nó sẽ chạy function này , ko cần có tên , ở trong function này có:jquery gọi đến id frmLogin\r\n");
      out.write("// 						// .validay để có thể validate được form này, tạo ra các luật( rules) và các thông báo (message);\r\n");
      out.write("// 						//rules và massage là tham số truyền vào của hàm validate\r\n");
      out.write("// 						$('#form').validate({\r\n");
      out.write("// 							 //chú ý là dấu phẩy ' , ', kết thúc 1 dòng là dùng dấu phẩy\r\n");
      out.write("// 							rules:{\r\n");
      out.write("// 								\"contactfullname\":{\r\n");
      out.write("// 									required: true,	\r\n");
      out.write("// 									minlength: 5,\r\n");
      out.write("// 								},\r\n");
      out.write("// 								\"contactemail\":{\r\n");
      out.write("// 									required: true,\r\n");
      out.write("// 								},\r\n");
      out.write("// 								\"contactmessage\":{\r\n");
      out.write("// 									required: true,\r\n");
      out.write("// 								},\r\n");
      out.write("\r\n");
      out.write("// 							},\r\n");
      out.write("// 							messages:{\r\n");
      out.write("// 								\"contactfullname\":{\r\n");
      out.write("// 									required: \"vui lòng nhập username\",	\r\n");
      out.write("// 									minlength: \"vui lòng nhập ít nhất 5 ký tự\",\r\n");
      out.write("// 								},\r\n");
      out.write("// 								\"contactemail\":{\r\n");
      out.write("// 									required: \"Vui lòng nhập giới thiệu\",\r\n");
      out.write("// 								},\r\n");
      out.write("// 								\"contactmessage\":{\r\n");
      out.write("// 									required: \"Vui lòng nhập giới thiệu\",\r\n");
      out.write("// 								},\r\n");
      out.write("// 							}  \r\n");
      out.write("							\r\n");
      out.write("// 						});\r\n");
      out.write("// 					}); \r\n");
      out.write("					\r\n");
      out.write("					</script> \r\n");
      out.write("				</div>	\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"clr\"></div>\r\n");
      out.write("<div class=\"footer\">\r\n");
      out.write("				<span>Copyright 2021 © || Code by Tran Van Trinh </span>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
